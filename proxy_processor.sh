#!/bin/bash

echo "===================================================================="
echo "Скрипт для обработки прокси-серверов с заданным форматом вывода"
echo "===================================================================="

# Файл для сохранения обработанных прокси
OUTPUT_FILE="output_proxies.txt"

echo "===================================================================="
echo "Функции для проверки корректности IP-адреса и порта"
echo "===================================================================="

# Функция для проверки корректности IP-адреса
is_valid_ip() {
    local ip=$1
    local IFS='.'
    local -a octets=($ip)

    # Проверка, что IP состоит из 4 октетов
    if [ ${#octets[@]} -ne 4 ]; then
        return 1
    fi

    for octet in "${octets[@]}"; do
        # Проверка, что октет является числом
        if ! [[ $octet =~ ^[0-9]+$ ]]; then
            return 1
        fi
        # Проверка диапазона октета
        if (( octet < 0 || octet > 255 )); then
            return 1
        fi
    done

    return 0
}

# Функция для проверки корректности порта
is_valid_port() {
    local port=$1
    if ! [[ $port =~ ^[0-9]+$ ]]; then
        return 1
    fi
    if (( port < 1 || port > 65535 )); then
        return 1
    fi
    return 0
}

echo "===================================================================="
echo "Функция для запроса формата прокси от пользователя с меню выбора"
echo "===================================================================="

get_user_format() {
    while true; do
        echo -e "\033c" # Очистка экрана
        echo "=================================================="
        echo "          Скрипт обработки прокси-серверов         "
        echo "=================================================="
        echo ""

        echo "Выберите тип формата вывода прокси:"
        echo "1. С аутентификацией (log:pass@ip:port)"
        echo "2. Без аутентификации (ip:port)"
        echo "3. Пользовательский формат"
        echo ""
        read -p "Ваш выбор (1-3): " format_choice

        echo "Отладка: выбран формат $format_choice" # Отладочный вывод

        case "$format_choice" in
            1)
                user_format="log:pass@ip:port"
                echo "Выбран формат: log:pass@ip:port"
                break
                ;;
            2)
                user_format="ip:port"
                echo "Выбран формат: ip:port"
                break
                ;;
            3)
                echo "Введите пользовательский формат вывода:"
                read -p "Формат вывода: " user_format
                # Проверка наличия обязательных плейсхолдеров
                REQUIRED_PLACEHOLDERS=("ip" "port")
                missing=()
                for placeholder in "${REQUIRED_PLACEHOLDERS[@]}"; do
                    if [[ ! $user_format =~ $placeholder ]]; then
                        missing+=("$placeholder")
                    fi
                done

                if [ ${#missing[@]} -ne 0 ]; then
                    echo "Ошибка: Формат должен содержать плейсхолдеры: ${missing[*]}. Пожалуйста, попробуйте снова."
                    echo ""
                else
                    echo "Выбран пользовательский формат: $user_format"
                    break
                fi
                ;;
            *)
                echo "Некорректный выбор. Пожалуйста, выберите 1, 2 или 3."
                echo ""
                ;;
        esac
    done

    echo "$user_format"
}

echo "===================================================================="
echo "Главная функция скрипта"
echo "===================================================================="

main() {
    echo ""

    # Получение формата от пользователя через меню
    user_format=$(get_user_format)
    echo ""
    echo "Выбранный формат: $user_format"
    echo ""
}

# Запуск главной функции
main
